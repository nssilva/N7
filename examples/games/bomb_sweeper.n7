' ==================================================================
' BombSweeper
'
' I hate every version of this game.
' ==================================================================
#win32
'visible:
' Dimensions of grid.
constant GRID_WIDTH  = 15
constant GRID_HEIGHT = 15
' Index for grid.
constant HAS_BOMB    = 0
constant IS_OPEN     = 1
constant CLOSE_BOMBS = 2
constant HAS_FLAG    = 3
visible vBombField = fill(0, GRID_WIDTH, GRID_HEIGHT, 4)
' Percent of field that should contain bombs.
visible vBombPercent = 8
visible vBombCount
visible vCorrectFlagCount

'hidden:

' Set window and turn of audomatic redraw.
set window "Bomb Sweeper", GRID_WIDTH*16, GRID_HEIGHT*16, false
set redraw off

' Create font. N7: using default n7 font instead
'create font 0, "courier new", 16, true

do
    ' Init.
    InitBombField()
    RedrawGrid()
    redraw

    done = false
    ' Game loop.
    do
        ' Transform from mouse to field coordinates.
        xm = int(mousex()/16)
        ym = int(mousey()/16)

        ' Sweep.
        if mousebutton(0, true)
            if HasBomb(xm, ym)
                ' Game over.
                break
            else
                Sweep(xm, ym)
                RedrawGrid()
                redraw
            endif
        endif
        ' Flag.
        if mousebutton(1, true)
            PutFlag(xm, ym)
            RedrawGrid()
            redraw

            if vCorrectFlagCount = vBombCount
                ' Done!
                done = true
                break
            endif
        endif
        wait 1
    until keydown(KEY_ESCAPE, true)

    ' Show result.
    set color 192, 192, 192
    cls
    set caret GRID_WIDTH*8, GRID_HEIGHT*8 - 32
    set color 0, 0, 0
    if done
        center "WELL DONE!"
    else
        center "KABOOM!!!"
    endif
    set color 64, 64, 64
    center "Click to continue ..."
    redraw

    while not mousebutton(0, true); fwait 60; wend
loop


' ==================================================================
' Init bomb field.
' ==================================================================
function InitBombField()
    randomize time()
    ' Clear.
    for y = 0 to GRID_HEIGHT - 1
        for x = 0 to GRID_WIDTH - 1
            vBombField[x][y][IS_OPEN] = false
            vBombField[x][y][HAS_BOMB] = false
            vBombField[x][y][CLOSE_BOMBS] = 0
            vBombField[x][y][HAS_FLAG] = false
        next
    next
    ' Add bombs.
    vBombCount = 0
    vCorrectFlagCount = 0
    for i = 0 to int(GRID_WIDTH*GRID_HEIGHT*vBombPercent/100) - 1
        do
            x = rnd(GRID_WIDTH)
            y = rnd(GRID_HEIGHT)
        until vBombField[x][y][HAS_BOMB] = false
        vBombField[x][y][HAS_BOMB] = true
        vBombCount = vBombCount + 1
    next
    ' Calculate number of close bombs for each cel.
    for y = 0 to GRID_HEIGHT - 1
        for x = 0 to GRID_WIDTH - 1
            if not HasBomb(x, y)
                bc = HasBomb(x - 1, y - 1)
                bc = bc + HasBomb(x, y - 1)
                bc = bc + HasBomb(x + 1, y - 1)
                bc = bc + HasBomb(x - 1, y)
                bc = bc + HasBomb(x + 1, y)
                bc = bc + HasBomb(x - 1, y + 1)
                bc = bc + HasBomb(x, y + 1)
                bc = bc + HasBomb(x + 1, y + 1)
                vBombField[x][y][CLOSE_BOMBS] = bc
            endif
        next
    next
endfunc

' ==================================================================
' Return true if there's a bomb at (x, y).
' ==================================================================
function HasBomb(x, y)
    if x < 0 or x >= GRID_WIDTH or y < 0 or y >= GRID_HEIGHT then return false
    if vBombField[x][y][HAS_BOMB] then return true
    return false
endfunc

' ==================================================================
' Put or remove flag at (x, y).
' ==================================================================
function PutFlag(x, y)
    if x < 0 or x >= GRID_WIDTH or y < 0 or y >= GRID_HEIGHT then return
    if vBombField[x][y][IS_OPEN] then return
    if vBombField[x][y][HAS_FLAG]
        if HasBomb(x, y) then vCorrectFlagCount = vCorrectFlagCount - 1
        vBombField[x][y][HAS_FLAG] = false
    else
        if HasBomb(x, y) then vCorrectFlagCount = vCorrectFlagCount + 1
        vBombField[x][y][HAS_FLAG] = true
    endif
endfunc

' ==================================================================
' Redraw entire grid.
' ==================================================================
function RedrawGrid()
    set color 192, 192, 192
    cls
    for y = 0 to GRID_HEIGHT - 1
        for x = 0 to GRID_WIDTH - 1
            DrawSquare(x*16, y*16, 15, 15, vBombField[x][y][IS_OPEN])
            if vBombField[x][y][IS_OPEN]
                if vBombField[x][y][CLOSE_BOMBS] > 0
                    set caret x*16 + 4, y*16 + 1
                    set color 200, 0, 0
                    write vBombField[x][y][CLOSE_BOMBS]
                endif
            elseif vBombField[x][y][HAS_FLAG]
                set caret x*16 + 4, y*16 + 1
                set color 0, 128, 0
                write "?"
            endif
        next
    next
endfunc

' ==================================================================
' Draw square at x, y.
' ==================================================================
function DrawSquare(x, y, w, h, sweeped)
    if sweeped
        set color 64, 64, 64
    else
        set color 255, 255, 255
    endif
    draw line x, y, x + w - 1, y
    draw line x, y, x, y + h - 1
    if sweeped
        set color 255, 255, 255
    else
        set color 64, 64, 64
    endif
    draw line x + 1, y + h, x + w, y + h
    draw line x + w, y + 1, x + w, y + h
endfunc

' ==================================================================
' Make a bomb sweep from (x, y).
' ==================================================================
function Sweep(x, y)
    if x < 0 or x >= GRID_WIDTH or y < 0 or y >= GRID_HEIGHT then return
    if vBombField[x][y][IS_OPEN] or vBombField[x][y][HAS_BOMB] then return
    if vBombField[x][y][HAS_FLAG] then return
    vBombField[x][y][IS_OPEN] = true
    if vBombField[x][y][CLOSE_BOMBS] > 0 then return
    Sweep(x - 1, y)
    Sweep(x + 1, y)
    Sweep(x, y - 1)
    Sweep(x, y + 1)
endfunc
